package com.github.demchenkovv.multithreading.level06.lecture15.task3008.client;

import com.github.demchenkovv.multithreading.level06.lecture15.task3008.Connection;

/**
 * Приступим к написанию клиента. <p>
 * Клиент, в начале своей работы, должен запросить у пользователя адрес и порт сервера, подсоединиться к
 * указанному адресу, получить запрос имени от сервера, спросить имя у пользователя, отправить имя пользователя
 * серверу, дождаться принятия имени сервером. <p>
 * После этого клиент может обмениваться текстовыми сообщениями с сервером. Обмен сообщениями будет происходить
 * в двух параллельно работающих потоках. Один будет заниматься чтением из консоли и отправкой прочитанного серверу,
 * а второй поток будет получать данные от сервера и выводить их в консоль.
 */
public class Client {
    protected Connection connection;
    private volatile boolean clientConnected = false; // клиент подсоединен к серверу (true), иначе false

    // inner class SocketThread отвечает за поток, устанавливающий сокетное соединение и читающий сообщения сервера
    public class SocketThread extends Thread {
    }
}
